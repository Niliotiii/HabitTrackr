@layout()
<div class="page-header">
  <h3 class="page-title"> Hábito - {{ !habit ? 'Novo' : `Atualização: ${habit.name}` }} </h3>
</div>

<div class="row">
  <div class="col-12 grid-margin stretch-card">
    <div class="card">
      <div class="card-body">
        <form class="forms-sample" method="POST" id="habitForm"
          action="{{ !habit ? route('habits.store') : route('habits.update', { id: habit.id }, { qs: { _method: 'PUT' } }) }}">

          {{ csrfField() }}

          <!-- Nome do Hábito -->
          <div class="form-group">
            <label for="inputName">Nome do Hábito</label>
            <input type="text" class="form-control" id="inputName" 
              value="{{ old('name') || habit?.name || '' }}" name="name" 
              placeholder="Informe o nome do hábito" required>

            @inputError('name')
            <span class="text-danger"> {{ $messages.join(', ') }} </span>
            @end
          </div>

          <!-- Descrição -->
          <div class="form-group">
            <label for="inputDescription">Descrição</label>
            <textarea class="form-control" id="inputDescription" name="description" rows="4"
              placeholder="Informe uma breve descrição" required>{{ old('description') || habit?.description || '' }}</textarea>

            @inputError('description')
            <span class="text-danger"> {{ $messages.join(', ') }} </span>
            @end
          </div>

          <!-- Prioridade e Status -->
          <div class="form-row">
            <div class="form-group col-md-6">
              <label for="inputPriority">Prioridade</label>
              <input type="number" class="form-control" id="inputPriority" name="priority"
                value="{{ old('priority') || habit?.priority || 1 }}" placeholder="Informe a prioridade do hábito" required>

              @inputError('priority')
              <span class="text-danger"> {{ $messages.join(', ') }} </span>
              @end
            </div>

            <div class="form-group col-md-6">
              <label for="inputStatus">Status</label>
              <select class="form-control" id="inputStatus" name="status">
                <option value="active" {{ old('status') == 'active' || habit?.status == 'active' ? 'selected' : '' }}>Ativo</option>
                <option value="inactive" {{ old('status') == 'inactive' || habit?.status == 'inactive' ? 'selected' : '' }}>Inativo</option>
              </select>

              @inputError('status')
              <span class="text-danger"> {{ $messages.join(', ') }} </span>
              @end
            </div>
          </div>

          <!-- Categoria -->
          <div class="form-group">
            <label for="inputCategory">Categoria</label>
            <select class="form-control" id="inputCategory" name="categoryId" required>
              <option value="">Selecione uma categoria</option>
              @each(category in categories)
              <option value="{{ category.id }}" {{ old('categoryId') == category.id || habit?.categoryId == category.id ? 'selected' : '' }}>
                {{ category.name }}
              </option>
              @end
            </select>

            @inputError('categoryId')
            <span class="text-danger"> {{ $messages.join(', ') }} </span>
            @end
          </div>

          <!-- Botões de ação -->
          <button type="submit" class="btn btn-primary mr-2">Salvar</button>
          <a href="{{ route('habits.index') }}" class="btn btn-dark">Cancelar</a>
        </form>
      </div>
    </div>
  </div>
</div>

@end

<script>
  document.getElementById('habitForm').addEventListener('submit', function(event) {
    // Pegando os valores dos campos
    const name = document.getElementById('inputName').value.trim();
    const description = document.getElementById('inputDescription').value.trim();
    const priority = document.getElementById('inputPriority').value.trim();
    const category = document.getElementById('inputCategory').value;

    // Verificando se os campos estão válidos
    if (!name) {
      alert('O campo Nome é obrigatório.');
      event.preventDefault();
      return;
    }

    if (!description) {
      alert('O campo Descrição é obrigatório.');
      event.preventDefault();
      return;
    }

    if (!priority || isNaN(priority) || priority <= 0) {
      alert('O campo Prioridade deve ser um número válido.');
      event.preventDefault();
      return;
    }

    if (!category) {
      alert('O campo Categoria é obrigatório.');
      event.preventDefault();
      return;
    }
  });
</script>
